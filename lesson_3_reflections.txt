When would you want to use a remote repository rather than keeping all your work
local?

I would want to use a remote repository when I am collaborating with other people on
a project.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

When you or someone else had added new files or changes to existing files in the remote
repository, I would want to pull the changes.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

You make a branch off the master branch when you want to try out a new feature or fix a bug.
You clone or make a copy of a repository to work on your own extensions of a project locally.
A clone can happen totally locally or from github to a local computer. A fork happens when you
want to clone someone else's work and you do not have permission to modify/extend it. So you clone
their repository into your own github account. This happens from a github account to another github
account.

What is the benefit of having a copy of the last known state of the remote
stored locally?

By having a local copy of the last known commit, you can do a diff to see how your changes can merge with
the existing changes in the repository.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

Without git and github, you would have to maintain several versions of a project. Also, you would have to
mail these versions back and forth, do manual diffs and merges. This would be very time consuming and take
up alot more spacde. Collaborating with others using Git and GitHub makes easier, by making different versions
of project separate through branches/clones and forks. This allows people to make smooth progress while collaborating.

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

Changes that new features or experimental features may be good candidates for separate branches. Changing the master
is easier but then everyone will see these changes and have to merge with them.
